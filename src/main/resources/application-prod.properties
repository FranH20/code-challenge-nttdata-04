# Quarkus port configuration
quarkus.http.port=${PORT:8080}
quarkus.http.host=0.0.0.0

# Quarkus HTTP configuration
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=${CORS_ORIGINS:http://localhost:8080}
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.idle-timeout=PT10M
quarkus.http.read-timeout=PT30S
quarkus.http.write-timeout=PT30S

# Quarkus security configuration
quarkus.http.limits.max-body-size=10M
quarkus.http.auth.proactive=true

# Quarkus log configuration
quarkus.log.level=INFO
quarkus.log.console.json=true
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{3.}] (%t) %s%e%n

# Quarkus performance configuration
quarkus.thread-pool.max-threads=30
quarkus.datasource.jdbc.max-size=20

# Quarkus helth configuration
quarkus.health.extensions.enabled=true
quarkus.smallrye-health.root-path=/health

# Database configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.reactive.url=vertx-reactive:postgresql://aws-1-sa-east-1.pooler.supabase.com:6543/postgres
quarkus.datasource.username=postgres.ogsmfbxrlmvhvlrunokq
quarkus.datasource.password=${DB_PASSWORD}
quarkus.hibernate-orm.schema-management.strategy=drop-and-create

# Swagger UI configuration
quarkus.swagger-ui.always-include=true

# kafka configuration for spring boot application
# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.bootstrap-servers=pkc-56d1g.eastus.azure.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${CLUSTER_API_KEY}' password='${CLUSTER_API_SECRET}';
spring.kafka.properties.security.protocol=SASL_SSL

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000

client.id=${KAFKA_CLIENTE_ID}

# Producer configuration
mp.messaging.outgoing.tremor-out.connector=smallrye-kafka
mp.messaging.outgoing.tremor-out.topic=tremor-events
mp.messaging.outgoing.tremor-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.tremor-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# Consumer configuration
mp.messaging.incoming.tremor-in.connector=smallrye-kafka
mp.messaging.incoming.tremor-in.topic=tremor-events

# Group consumer configuration
mp.messaging.incoming.tremor-in.group.id=${KAFKA_CONSUMER_INSTANCE_ID}
mp.messaging.incoming.tremor-in.auto.offset.reset=earliest
